<h1>WEEK</h1>
<ul>
<li><a href="https://s40723247.github.io/cad2019/content/week2-5.html">week2-5</a></li>
<li><a href="https://s40723247.github.io/cad2019/content/Week6-9.html">week6-9</a></li>
<li><a href="https://s40723247.github.io/cad2019/content/week10-14.html">week10-14</a></li>
<li><a href="https://s40723247.github.io/cad2019/content/week15-18.html">week15-18</a></li>
</ul>
<h2>week2-5</h2>
<h4><strong>week2</strong></h4>
<ol>
<li>在自己的git hub建立新倉儲 cad2019 ，並且到mde.tw下載2019Fall可攜套件.7z</li>
<li>使用git config --global user.name "user name"與git config --global user.email "<span>user email</span>" 設定自己的名字與email</li>
<li><span>使用git submodule add新的指令 指令如下 ( git submodule add https://github.com/mdecourse/cmsimde.git cmsimde )</span></li>
<li><span>輸入指令python -m pip install flask cors</span></li>
<li><span>開啟近端開始更新內容，更新完成使用一上所使用的 git指令(git status、git pull .....</span><span>)</span></li>
</ol>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/qdo8tDQ6NRI" width="560"></iframe></span></p>
<h4>week3</h4>
<p>1. <span>Y:\portablegit\bin\sh.exe 重新命名為 sh_rename_for_solvespace.exe</span></p>
<p>2. 輸入<span>指令git clone </span><span>--recurse-submodules</span></p>
<p><span>3. 在cmakelist內之713及714行(加入#字號)</span></p>
<p><span>4. 進到<span>cd solvespace&gt;cd extlib&gt;cd libpng&gt;mkdir build&gt;cd build</span></span></p>
<p><span><span>5. 執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/><span>mingw32-make</span></span></span></p>
<p><span><span>6. 找<span> libpng.dll.a 更名，並更名名為 libpng_static.a</span></span></span></p>
<p><span><span>7. 回到 solvespace ,建立 build 後進入 build </span></span></p>
<p><span><span>8. 執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/><span>mingw32-make</span></span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DJnZyyjAo4w" width="560"></iframe></p>
<h4>week4</h4>
<p>補做之前未跟上的進度</p>
<h4>week5</h4>
<p>solvespace的基本操作練習</p>
<p>1.先將<span>solvespace打開</span></p>
<p><span>2.繪製一個35x35的方形 (快捷鍵D可以定義尺寸)</span></p>
<p><span>3.點選New group extruding active sketch (快捷鍵Shift+X)</span></p>
<p><span>4.旁邊小視窗會出現一個in 3D的字樣</span></p>
<p><span>5.點選草圖然後按下滑鼠中鍵可以旋轉</span></p>
<p><span>6.成功進入3D之後旁邊小視窗找到color，再旁邊會有一個change那就是可以改顏色的部分</span></p>
<p><span>7.在color下有個opacity可以更改方塊的透明度</span></p>
<p><span>8.基本的練習 (測量點到點的距離、隱藏座標、隱藏point的部分)</span></p>
<p><span></span></p>
<p>完成圖</p>
<p><span><img alt="" height="213" src="/images/123.PNG" width="392"/></span></p>
<p><span>以下是練習影片</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/SuvZlG6l8As" width="560"></iframe></span></p>
<h2>Week6-9</h2>
<h4>week6</h4>
<p><span>1.到課程網站中解壓縮web_vrep2與V-REP3</span></p>
<p><span>2.打開V-REP3內的應用程式</span></p>
<p><span>3.導入web_vrep2的two_wheeler.ttt檔案</span></p>
<p><span>4.打開web_vrep2內的app.py按下GO</span></p>
<p><span>5.複製網址打開網頁</span></p>
<p><span>6.操作車子</span></p>
<p><span>教學影片</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/tzNiJQJqU0o" width="560"></iframe></p>
<h4>week7</h4>
<p>1.到E:\tmp\solvespace\build\src\CMakeFiles\solvespace.dir內刪除obj檔案</p>
<p>2.E:\tmp\solvespace\src尋找slovespace.cpp檔案進行編輯</p>
<p>3.搜尋GPL 並把上面改成<span>compiled by 自己的學號</span></p>
<p>4.再進入E:\tmp\solvespace\build，輸入指令cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</p>
<p>5.輸入另一個指令mingw32-make</p>
<p>6.到E:\tmp\solvespace\build\bin裡面打開slevespace.exe</p>
<p>7.點選Help內的About確認是否編譯完成</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/H1rJ8r4ARrQ" width="560"></iframe></p>
<p><strong>solvespace零件繪製</strong></p>
<p><strong><img alt="" height="263" src="/images/1.PNG" width="526"/></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5nOXEHBlboU" width="560"></iframe></strong></p>
<h4><strong>week8</strong></h4>
<p><strong>(1)</strong></p>
<p>1.打開LEO並且把pelican.leo拖進去</p>
<p>2.到<span>pelican設定的@edit貼上自己的biog網址</span></p>
<p><span>3.對local-blog按右鍵Goto Script 複製裡面指令</span></p>
<p><span>4.到自己資料夾內輸入這段指令</span></p>
<p><span>5.到近端確認是否完成</span></p>
<p><span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/YFmI8EIVLC8" width="560"></iframe></p>
<p><strong>(2)</strong></p>
<p>1.首先先把start複製下來</p>
<p>2.到2019/data/webots貼上剛剛複製的start</p>
<p>3.把剛剛複製的改名並且拖到編輯器裡面</p>
<p>4.增加set path_webots=%Disk%:\Webots_2019b_rev1\msys64\mingw64\bin;%Disk%:\Webots_2019b_rev1\msys64\usr\bin</p>
<p>5.並在path=%..這段後面新增%path_webots%</p>
<p>6.在下面再新增一段start Y:\Webots_2019b_rev1\msys64\mingw64\bin\webots.exe</p>
<p>7.啟動</p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/O-m0cIgSw2I" width="560"></iframe></strong></p>
<h2>week10-14</h2>
<h2>week15-18</h2>
<h1>note</h1>
<p><img alt="" height="173" src="/images/8601a18b87d6277f72ff2d4f28381f30e824fcdc.jpg" width="200"/></p>
<p>pro-e是Pro/Engineer的簡稱，更常用的簡稱是ProE或Pro/E，Pro/E是美國參數技術公司（Parametric Technology Corporation，簡稱PTC）的重要產品，在目前的三維造型軟件領域中佔有著重要地位。</p>
<p>pro-e作為當今世界機械CAD/CAE/CAM領域的新標準而得到業界的認可和推廣，是現今主流的模具和產品設計三維CAD/CAM軟件之一。</p>
<p><span style="color: #ff0000;">Pro/ENGINEER在2010年8月改名為「<b>Creo Elements/Pro</b>」</span></p>
<p><span style="color: #ff0000;"><span>2011年6月再改名為「</span><b>Creo Parametric</b><span>」</span></span></p>
<p><strong>主要特性 : </strong></p>
<p>Pro/E第一個提出了<span style="color: #ff0000;">參數化設計</span>的概念，並且採用了單一數據庫來解決特徵的相關性問題。另外，它採用模塊化方式，用戶可以根據自身的需要進行選擇，而不必安裝所有模塊。 Pro/E的基於特徵方式，能夠將設計至生產全過程集成到一起，實現並行工程設計。它不但可以應用於工作站，而且也可以應用到單機上。</p>
<p><br/>Pro/E採用了模塊方式，可以分別進行<span style="color: #ff0000;">草圖繪製</span>、<span style="color: #ff0000;">零件製作</span>、<span style="color: #ff0000;">裝配設計</span>、<span style="color: #ff0000;">鈑金設計</span>、<span style="color: #ff0000;">加工處理</span>等，保證用戶可以按照自己的需要進行選擇使用。</p>
<p><strong><span style="color: #000000;">1.參數化設計</span></strong></p>
<p>相對於產品而言，可以把它看成幾何模型，而無論多麼複雜的幾何模型，都可以分解成有限數量的構成特徵，而每一種構成特徵，都可以用有限的參數完全約束，這就是參數化的基本概念。</p>
<p><span style="color: #000000;"><strong>2.基於特徵建模</strong></span></p>
<p>Pro/E是基於特徵的實體模型化系統，工程設計人員採用具有智能特性的基於特徵的功能去生成模型如腔、殼、倒角及圓角，您可以隨意勾畫草圖，輕易改變模型。這一功能特性給工程設計者提供了在設計上從未有過的簡易和靈活，特別是在設計系列化產品上更是有得天獨到的優勢</p>
<p><strong><span style="color: #000000;">3.單一數據庫</span></strong></p>
<p>Pro/Engineer是建立在統一基層上的數據庫上，不像一些傳統的CAD/CAM系統建立在多個數據庫上。所謂<span style="color: #ff0000;">單一數據庫</span>，就是工程中的資料全部來自一個庫，使得每一個獨立用戶在為一件產品造型而工作，不管他是哪一個部門的。換言之，在整個設計過程的任何一處發生改動，亦可以前後反應在整個設計過程的相關環節上。例如，一旦工程詳圖有改變，NC（數控）工具路徑也會自動更新；組裝工程圖如有任何變動，也完全同樣反應在整個三維模型上。這種獨特的數據結構與工程設計的完整的結合，使得一件產品的設計結合起來。這一優點，使得設計更優化，成品質量更高，產品能更好地推向市場，價格也更便宜。</p>
<p><strong><span style="color: #000000;">4.直觀裝配管理</span></strong></p>
<p><span style="color: #333333;">Pro/ENGINEER的基本結構能夠使您利用一些直觀的命令，例如“貼合”、“插入”、“對齊”等很容易的把零件裝配起來，同時保持設計意圖。高級的功能支持大型複雜裝配體的構造和管理，這些裝配體中零件的數量不受限制。</span></p>
<p><span style="color: #333333;"><strong>5.易於使用</strong></span></p>
<p>菜單以直觀的方式聯級出現，提供了邏輯選項和預先選取的最普通選項，同時還提供了簡短的菜單描述和完整的在線幫助，這種形式使得容易學習和使用。</p><h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端 .</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>