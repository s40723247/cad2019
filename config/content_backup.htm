<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端 .</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>WEEK 2 - 9</h1>
<h2>week2</h2>
<ol>
<li>在自己的git hub建立新倉儲 cad2019 ，並且到mde.tw下載2019Fall可攜套件.7z</li>
<li>使用git config --global user.name "user name"與git config --global user.email "<span>user email</span>" 設定自己的名字與email</li>
<li><span>使用git submodule add新的指令 指令如下 ( git submodule add https://github.com/mdecourse/cmsimde.git cmsimde )</span></li>
<li><span>輸入指令python -m pip install flask cors</span></li>
<li><span>開啟近端開始更新內容，更新完成使用一上所使用的 git指令(git status、git pull .....</span><span>)</span></li>
</ol>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/qdo8tDQ6NRI" width="560"></iframe></span></p>
<h2>week3</h2>
<p>1. <span>Y:\portablegit\bin\sh.exe 重新命名為 sh_rename_for_solvespace.exe</span></p>
<p>2. 輸入<span>指令git clone </span><span>--recurse-submodules</span></p>
<p><span>3. 在cmakelist內之713及714行(加入#字號)</span></p>
<p><span>4. 進到<span>cd solvespace&gt;cd extlib&gt;cd libpng&gt;mkdir build&gt;cd build</span></span></p>
<p><span><span>5. 執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/><span>mingw32-make</span></span></span></p>
<p><span><span>6. 找<span> libpng.dll.a 更名，並更名名為 libpng_static.a</span></span></span></p>
<p><span><span>7. 回到 solvespace ,建立 build 後進入 build </span></span></p>
<p><span><span>8. 執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/><span>mingw32-make</span></span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DJnZyyjAo4w" width="560"></iframe></p>
<h2>week4</h2>
<p>補做之前未跟上的進度</p>
<h2>week5</h2>
<p>solvespace的基本操作練習</p>
<p>1.先將<span>solvespace打開</span></p>
<p><span>2.繪製一個35x35的方形 (快捷鍵D可以定義尺寸)</span></p>
<p><span>3.點選New group extruding active sketch (快捷鍵Shift+X)</span></p>
<p><span>4.旁邊小視窗會出現一個in 3D的字樣</span></p>
<p><span>5.點選草圖然後按下滑鼠中鍵可以旋轉</span></p>
<p><span>6.成功進入3D之後旁邊小視窗找到color，再旁邊會有一個change那就是可以改顏色的部分</span></p>
<p><span>7.在color下有個opacity可以更改方塊的透明度</span></p>
<p><span>8.基本的練習 (測量點到點的距離、隱藏座標、隱藏point的部分)</span></p>
<p><span></span></p>
<p>完成圖</p>
<p><span><img alt="" height="1040" src="/images/123.PNG" width="1913"/></span></p>
<p><span>以下是練習影片</span></p>
<p><span></span></p>